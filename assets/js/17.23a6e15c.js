(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{379:function(t,a,v){"use strict";v.r(a);var e=v(19),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"vue"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),v("h3",{attrs:{id:"vue的三大核心"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue的三大核心"}},[t._v("#")]),t._v(" vue的三大核心")]),t._v(" "),v("ol",[v("li",[t._v("双向绑定，也就是数据驱动视图。")]),t._v(" "),v("li",[t._v("组件化，提高代码的复用，提高代码的可读性。")]),t._v(" "),v("li",[t._v("虚拟Dom，原生的Dom是非常重的，使用js对象来模拟dom，在视图更新的时候会做一些优化，性能更高。")])]),t._v(" "),v("h3",{attrs:{id:"vuex为什么把异步操作封装在actions-把同步操作放在mutations"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vuex为什么把异步操作封装在actions-把同步操作放在mutations"}},[t._v("#")]),t._v(" vuex为什么把异步操作封装在actions,把同步操作放在mutations？")]),t._v(" "),v("ul",[v("li",[t._v("mutations里的同步意义在于，每个mutation执行完毕之后，可以得到对应的状态，使用devtools可以跟踪状态的变化")]),t._v(" "),v("li",[t._v("如果是异步的，就没法知道状态是什么时候更新的，才有了actions。")]),t._v(" "),v("li",[t._v("actions用来专门处理异步，里面触发mutations，就可以很清楚的看到mutation是何时被记录下来的，并且立即查看他们对应的状态。这样异步更新也可以清楚看到状态的流程。")]),t._v(" "),v("li",[t._v("actions只是一个架构，并不是必须的，它只是一个函数，在里面想干嘛干嘛，只要最后触发mutation就行。")])]),t._v(" "),v("h3",{attrs:{id:"为什么vue组件中data必须是一个函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么vue组件中data必须是一个函数"}},[t._v("#")]),t._v(" 为什么vue组件中data必须是一个函数？")]),t._v(" "),v("p",[t._v("因为Vue中组件会被复用，如果data是一个对象，那么所有的组件会共用这个data，这样就乱套了。")]),t._v(" "),v("h3",{attrs:{id:"vue中v-if和v-show有什么区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue中v-if和v-show有什么区别"}},[t._v("#")]),t._v(" vue中v-if和v-show有什么区别？")]),t._v(" "),v("p",[t._v("1、v-if在条件切换时，会对标签进行适当的创建和销毁，而v-show则仅在初始化时加载一次，因此v-if的开销相对来说会比v-show大。\n2、v-if是惰性的，只有当条件为真时才会真正渲染标签；如果初始条件不为真，则v-if不会去渲染标签。v-show则无论初始条件是否成立，都会渲染标签，它仅仅做的只是简单的CSS切换。")]),t._v(" "),v("h3",{attrs:{id:"computed和watch的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#computed和watch的区别"}},[t._v("#")]),t._v(" computed和watch的区别")]),t._v(" "),v("h4",{attrs:{id:"computed"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#computed"}},[t._v("#")]),t._v(" computed")]),t._v(" "),v("ul",[v("li",[t._v("支持缓存，只有依赖数据发生改变，才会重新进行计算")]),t._v(" "),v("li",[t._v("不支持异步，当computed内有异步操作时无效，无法监听数据的变化")]),t._v(" "),v("li",[t._v("computed 属性值会默认走缓存，计算属性是基于它们的响应式依赖进行缓存的，也就是基于data中声明过或者父组件传递的props中的数据通过计算得到的值")]),t._v(" "),v("li",[t._v("如果一个属性是由其他属性计算而来的，这个属性依赖其他属性，是一个多对一或者一对一，一般用computed")]),t._v(" "),v("li",[t._v("如果computed属性属性值是函数，那么默认会走get方法；函数的返回值就是属性的属性值；在computed中的，属性都有一个get和一个set方法，当数据变化时，调用set方法。")])]),t._v(" "),v("h4",{attrs:{id:"侦听属性watch"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#侦听属性watch"}},[t._v("#")]),t._v(" 侦听属性watch：")]),t._v(" "),v("ul",[v("li",[t._v("不支持缓存，数据变，直接会触发相应的操作；")]),t._v(" "),v("li",[t._v("watch支持异步；监听的函数接收两个参数，第一个参数是最新的值；第二个参数是输入之前的值；")]),t._v(" "),v("li",[t._v("监听数据必须是data中声明过或者父组件传递过来的props中的数据，当数据变化时，触发其他操作。")])]),t._v(" "),v("h3",{attrs:{id:"nexttick是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#nexttick是什么"}},[t._v("#")]),t._v(" $nextTick是什么？")]),t._v(" "),v("blockquote",[v("p",[t._v("vue实现响应式并不是数据发生变化后dom立即变化，而是按照一定的策略来进行dom更新.")])]),t._v(" "),v("p",[t._v("nextTick 是在下次 DOM 更新循环结束之后执行延迟回调，在修改数据之后使用nextTick，则可以在回调中获取更新后的 DOM")]),t._v(" "),v("h3",{attrs:{id:"双向绑定原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#双向绑定原理"}},[t._v("#")]),t._v(" 双向绑定原理")]),t._v(" "),v("p",[t._v("vue.js 是采用数据劫持结合发布者-订阅者模式的方式，通过Object.defineProperty()来劫持各个属性的setter，getter，在数据变动时发布消息给订阅者，触发相应的监听回调。")]),t._v(" "),v("h3",{attrs:{id:"mixin"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mixin"}},[t._v("#")]),t._v(" mixin")]),t._v(" "),v("p",[t._v("vue中关于代码复用的一个实现方式，通过将多个组件的相同代码块提取出来放入到一个js文件中，再通过 mixins: [mixin]混入到组件内达到代码复用的目的，在项目具有多个相似功能的组件时很有用。")]),t._v(" "),v("h4",{attrs:{id:"合并规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#合并规则"}},[t._v("#")]),t._v(" 合并规则")]),t._v(" "),v("p",[t._v("钩子函数：同名钩子皆生效，且mixin会先于组件调用\n数据对象：同名发生冲突时以组件内数据优先\n值为对象的选项：methods、components、filters、directives，同数据合并方式。")])])}),[],!1,null,null,null);a.default=s.exports}}]);